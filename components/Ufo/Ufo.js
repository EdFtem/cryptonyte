/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: AlvaWong (https://sketchfab.com/alvawong06)
license: CC-BY-ND-4.0 (http://creativecommons.org/licenses/by-nd/4.0/)
source: https://sketchfab.com/3d-models/challenge-isometric-room-kidnap-2b8fb6ba4704419ba492c3506e68abdd
title: [Challenge] Isometric Room--Kidnap
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/ufo.gltf')
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.012}>
        <group rotation={[Math.PI / 2, 0, 0]} position={[0,0,-70]}>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.room_Room_0.geometry} material={materials.Room} />
          </group>
          <group position={[0, 65.06, 0]} rotation={[-Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.Girl_Girl_0.geometry} material={materials.Girl} />
          </group>
          <group position={[-0.75, 310.43, 1.65]} rotation={[-Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.Cylinder001_Light_0.geometry} material={materials.Light} />
          </group>
          <group position={[-0.1, 376.34, 0.21]} rotation={[-Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.Object001_UFO_0.geometry} material={materials.material} />
          </group>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={1.1}>
            <mesh geometry={nodes.Object002_Room_0.geometry} material={materials.Room} />
          </group>
          <group position={[0, 0, 28.3]} rotation={[-Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.Object003_Room_0.geometry} material={materials.Room} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/ufo.gltf')
